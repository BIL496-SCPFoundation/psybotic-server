package com.scpfoundation.psybotic.server;
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import org.springframework.boot.test.context.SpringBootTest;

import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
 * This file was automatically generated by EvoMaster on 2021-02-26T00:26:16.806346900+03:00[Europe/Istanbul]
 * <br>
 * The generated test suite contains 16 tests
 * <br>
 * Covered targets: 16
 * <br>
 * Used time: 0h 0m 32s
 * <br>
 * Needed budget for current results: 35%
 * <br>
 *
 */
@SpringBootTest
public class EvoMasterTest {


    private static String baseUrlOfSut = "http://localhost:8080";


    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }








    @Test
    public void test_0() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/familyMembers/findById?id=vPmms0SvdsBgg")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_1() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/psyhchologists/findById?id=EtcECcaKXI")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_2() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/disasters/findById?id=WiE")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_3() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"phone\": \"b\", " +
                    " \"type\": \"D\", " +
                    " \"city\": \"IUcBg\", " +
                    " \"firstname\": \"LykOK5Mg\" " +
                    " } ")
                .post(baseUrlOfSut + "/familyMembers/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Family Member User saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_4() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/psyhchologists/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Psychologist saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_5() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/users/findById?id=Apl3n")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_6() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" {} ")
                .post(baseUrlOfSut + "/emergencyContacts/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("User saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_7() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"location\": \"XYITEdG_unBD\", " +
                    " \"date\": \"1937-12-30T21:42:44\" " +
                    " } ")
                .post(baseUrlOfSut + "/disasters/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("Disaster saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_8() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/emergencyContacts/findById?id=IVfq6Os6XegH4sS")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_9() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"googleId\": \"4JqlxX\", " +
                    " \"gender\": \"V\", " +
                    " \"maritalStatus\": \"ZKulP\" " +
                    " } ")
                .post(baseUrlOfSut + "/users/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("User saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_10() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/mentalStates/findById?id=JMve")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_11() throws Exception {

        given().accept("*/*")
                .get(baseUrlOfSut + "/chatMessages/findById?id=LGqCXgnN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("")
                .body(isEmptyOrNullString());
    }


    @Test
    public void test_12() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"sent_to\": \"cotxxmXPp3zXn\" " +
                    " } ")
                .post(baseUrlOfSut + "/chatMessages/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("chatMessage saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_13() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"emotional_state\": \"BR\" " +
                    " } ")
                .post(baseUrlOfSut + "/mentalStates/insert")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'message'", containsString("User saved successfully"))
                .body("'status'", numberMatches(200.0));
    }


    @Test
    public void test_14() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"time\": \"2047-03-13T11:55:16\", " +
                    " \"emotional_state\": \"FLd1\" " +
                    " } ")
                .post(baseUrlOfSut + "/mentalStates/insert")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString(""))
                .body("'path'", containsString("/mentalStates/insert"));
    }


    @Test
    public void test_15() throws Exception {

        given().accept("*/*")
                .contentType("application/json")
                .body(" { " +
                    " \"geteMail\": \"ubma2UiD1uuN0_b\", " +
                    " \"googleId\": \"96w_IJhC_JrQ1gz\", " +
                    " \"gender\": \"hdEiaajw61f_\", " +
                    " \"city\": \"OCcF0Z\" " +
                    " } ")
                .post(baseUrlOfSut + "/users/insert")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'error'", containsString("Bad Request"))
                .body("'message'", containsString(""))
                .body("'path'", containsString("/users/insert"));
    }


}
